APPLE II HISTORY
===== == =======

Compiled and written by Steven Weyhrich
(C) Copyright 1992, Zonker Software

 (PART 9 -- DISK EVOLUTION / THE APPLE IIC PLUS)
[v1.2 :: 21 May 92]


ADVANCES IN APPLE II DISK STORAGE

     Since Steve Wozniak's DiskII floppy drive changed the Apple II from a hobbyist toy to a serious home and business computer in the late 1970's, the progress of disk storage has been slow for the Apple II series.  In 1978, the year the DiskII was released, Mike Scott (Apple's president) and Randy Wigginton were asked at a user group meeting whether they were going to go to the larger capacity eight-inch floppy drives (which had been around before the 5.25 floppy drives).  They answered that no, the Apple II was not going in that direction, but felt it might get a hard disk by 1979 or 1980, and possibly earlier than that a double sided, double density 5.25 disk with 500K per disk.<1>  Of course, this never did happen; as we saw in part 7 of this historical overview, the Apple III project began to overtake the hearts and minds of Apple executives by 1979, and anything newer, bigger, or better was reserved for that machine.  As a result, DOS 3.2 and 3.3 was hard-coded to work specifically with the DiskII and its 143K of available storage, and never enhanced to easily access larger capacity drives.  (Later, when we examine the evolution of Apple II DOS, we will see that it was possible from the beginning for DOS 3.2 and 3.3 to access up to 400K per disk in its catalog structure; however, the low-level disk access routines built-in to DOS were ONLY for the DiskII).
     So what changes DID occur in Apple II disk storage?  Between 1978, when Apple released their original Shugart 5.25 inch floppy drives, and 1984, nothing much changed.  Third party company produced patches that modified DOS 3.2 (and later DOS 3.3) to work with larger drives; from eight-inch floppy drives to hard disks (a whole 10 megabytes for only $5,350 from Corvus!<2>) to other various short-lived innovations, all made to try to end the "floppy shuffle".  (One of the more interesting ones put five floppy disks into a cartridge, and through software made them appear to the computer as one large disk drive).  Eventually Apple decided that the aging DiskII mechanism needed a face lift, and they introduced in the DuoDisk in May of 1984.  This was essentially two DiskII drives in a single cabinet, with a special controller card.  The drive mechanism was improved to better read half-tracks on disks (which some copy-protected software used), and at $795 was priced to be less expensive than buying two of the older DiskII drives with a controller card.<3>  The most important advantage of this new design was an elimination of the "fried disk drive" problem that happened constantly with the older design.  The old DiskII controller had two connectors, one for each DiskII drive that could be connected.  The problem was the in the design of the connector; like the game paddle plugs for the original Apple II and IIPlus, the plugs for the DiskII drives were simply a series of pins that had to be properly aligned for the drive to function (similar to the delicate pins on a computer chip).  If you tried to attach the plug in such a way as to accidentally shift the pins over by one, it would burn out the motor on the disk drive, requiring a trip for repairs to the local Apple dealer.  The new DuoDisk design made connection of the disk mechanism to the controller fool-proof.
     With the release of the Apple IIc in April 1984 came an external DiskII drive that was designed to plug into the new disk port in the back of the IIc, and was the same color and design as the IIc case.  The DiskIIc was specific to the Apple IIc and could not be used with any older version Apple II, since it used a new, unique connector.  However, since it was more expensive than a used DiskII drive, many users found out how to make a conversion cable to connect the older drive to the disk port; some even went the other direction and found ways to connect the new drive to the older DiskII controller cards for the IIPlus and IIe.
     The next small evolutionary step in disk storage technology for the Apple II was introduced in June 1985, with the release of the UniDisk5.25.  This drive was designed with the same appearance as the DuoDisk, but was a single 5.25 drive.  It was also designed to allow one drive to be "daisy-chained" to another (one disk could plug into the back of another, forming a "chain"), instead of the older method of connecting each drive separately to the disk controller card.  Its beige color was designed to match the original Apple IIe.<4>,<5>
     The last version of the DiskII was called the Apple5.25 drive.  It was identical to the UniDisk5.25 drive, except for its case, which was designed in the platinum color to match the Apple IIGS and the platinum IIe.  The connector it used allowed it to also be connected in a daisy-chain fashion.<5>


NOW A WORD FROM OUR SPONSOR: BASICS OF DISK STORAGE

     Let's diverge for a moment from discussing specific Apple disk products and turn to a description on how the data are stored on a disk.  There are two important concepts that you need to understand to see why some methods of data storage are "faster" than other methods.  The first concept is the physical data layout on the disk, and the second concept is the "logical" data layout.
     The physical layout of data on a disk is important to the hardware of the disk drive.  If the computer tells the disk drive to retrieve data from the disk, it has to be able to tell the drive exactly WHERE on the disk surface that data are stored.  Most disk drives in use today (and when Steve Wozniak designed the original DiskII) store data on disks that are round, magnetically coated pieces of plastic that spin within a protective sleeve.  The older 5.25 inch and 8 inch disks were "floppy" disks because they used a flexible protective sleeve (unlike the older yet but larger capacity "hard" or fixed disks, which usually could not be removed).  The newer 3.5 inch disks are also made of the same magnetically coated plastic, but their protective sleeve is a hard shell.  Within its sleeve the thin plastic disk spins around rapidly while the disk drive motor is on.
     When a disk is formatted, certain addresses are written to the disk surface in a pattern that is known to the program (the disk operating system) used by the computer controlling the disk drive.  Most computers divide the disk surface up into concentric rings (called "tracks"), and each track is divided up into segments called sectors or blocks.  Each segment holds a specific number of bytes of data; for the Apple II, this has been either 256 bytes (sectors on 5.25 disks) or 512 bytes (blocks on newer disk devices).  The number of sectors or blocks per track differs, depending on the device in question; what is important is that the disk operating system knows how to get to the right block when a request is made of it.
     The second concept, that of the "logical" layout of the disk, has to do with the way in which the disk operating system organizes the physical blocks on each track.  Imagine a phonograph record on a turntable (some of you still own those, don't you?)  It physically resembles a floppy disk; it is just larger in size and is not "floppy".  Mentally take a white marking pen and draw lines through the center of the record, across the entire surface from side to side, making the record resemble a pizza that has been cut up into wedges. 
Now draw a series of concentric circles, from the outside of the record down to the center.  Each ring will, of course, be smaller than the previous ring.  The rings you have drawn represent "tracks" on our simulated floppy disk, and the lines running through the center of the record represent the division of each track into blocks.  Suppose we drew enough lines to divide the record up into twelve "pieces" (of pizza).  That means that each "track" has twelve "blocks".
     Now that you have your disk divided up (you just "formatted" it!), let's store some data on it.  Numbering each "block" from one to twelve (like the numbers on a clock), let's put a checker into each block on the first (outermost) "track" (yes, a checker.  You know--from the game?)  Repeat the process on the second track, then the third, and so on, as far as you can go.  Eventually you won't be able to fit checkers into the blocks, because they will get too small.  (This points out one of the limits of floppy disks; at some point the available space on the disk becomes so small it is unusable.  A standard 5.25 disk for the Apple II can have anywhere from 35 to 40 tracks (Apple has always supported only 35 tracks), while the 3.5 disk has 80 tracks.  The checkers we have put in the "blocks" on this disk have also been labelled, but with the letters "A" through "L" for the first track, and "M" through "X" for the second track, and so on.
     Turn on the record player.  If you hold your hand over one spot on the first track on the record, you can see the lettered checkers as they move past.  As it goes by, grab the "A" checker, then the "B" checker, and so on.  Likely, after picking up checker "A" (on block 1), you had to wait for an entire rotation of the record before "B" comes by on block 2.  The same goes for "C", "D", and so on.  In computer terms, the "interleave" on this disk is 1 to 1 (written as 1:1).  If you were EXTREMELY fast, you could pick up "A", "B", "C", etc. as quickly as they went by, without having to wait for the next revolution of the record.  While few of us would be that fast, many of us could pick up a checker after about four went by that we didn't need.  "Reload" your data on this disk, this time putting checker "A" on block 1, then checker "B" on block 5, checker "C" on block 9, checker "D" on block 2, check "E" on block 6, and so on.  Now, as the record spins, you might be able to pick up "A", "B", "C", and so on without having to wait for the next revolution of the record.  This would be (approximately) a 4:1 interleave.  With this "logical" layout, you can pickup (load) checkers from the disk, and replace (store) checkers on the disk more efficiently.  If your hands are still not fast enough, you may need to increase the interleave to 6:1 or even 8:1.  If your hands are faster, you could possibly use a 3:1 or 2:1 interleave.
     This is roughly what happens with disk access.  A disk device and operating system that is extremely quick about processing the data it reads off a disk can have a short interleave (1:1 or 2:1).  A slower disk device or operating system may need to use a 4:1 or higher interleave to work most efficiently.
     One last note:  Because a track on a disk contains a continuous stream of data bits, Apple drives were designed from the beginning to use "self-synchronization" to be able to tell one byte from the next.  This continuous series of bits would be similar to having a paragraph of text with no spaces between words.  If a sentence read "GODISNOWHERE", does it mean "GOD IS NOWHERE" or "GOD IS NOW HERE"?  Some method is needed to let the computer doing the reading know where the "spaces" between bytes exists.  I won't go into detail on exactly how this is carried out, but suffice it to say that some bytes on the disk are reserved for this decoding process, and so the true data bytes are specially encoded to not be mistaken for the self-sync bytes.  The process of decoding these "raw" data bytes is called de-nibblization, and translates about 700 of the raw bytes read directly from the disk into 512 true data bytes.  This is another part of the overhead necessary when reading from or writing to the disk; it would be similar to having to draw something on each checker with a marker as it was removed from the spinning record described above.


THE UNIDISK 3.5 AND APPLE 3.5

     The first new disk drive that Apple released after the original DiskII was a 400K, single-sided 3.5 inch drive for the original Macintosh.  Then, in September 1985 Apple finally released a similar drive for the Apple II series, one that was not simply a cosmetic improvement of the original DiskII drive.  The UniDisk3.5 drive was a double-sided version of the Mac drive, and could hold 800K of data.  The only connection that this new drive had with the original 5.25 drives was a chip used on its controller card; this IWM chip (for "Integrated Woz Machine") put the function of the original DiskII controller onto a single chip, plus the enhancements needed to operate this higher density drive.<4>  Apple's design for the UniDisk3.5 was unique, in that it used a modification to Sony's design that varied the speed of disk rotation, depending on which concentric track was being accessed.  This change made it possible for data to be packed compactly enough in the smaller inner tracks to gain an extra 80K beyond the 720K that was originally possible.
     The UniDisk was directly supported by the newer Apple IIc motherboards (as mentioned in the previous part of this History), but for the older Apple II's a special controller card was required.  The UniDisk3.5 was designed as an "intelligent" drive, and had a self-contained 65c02 processor and memory to temporarily store ("buffer") data being read from or written to the disk.  This was necessary because of the slow 1 MHz speed of the 6502 processors in the Apple II; they could not keep up with the faster data transfer rates possible with the 3.5 disk mechanism, plus the overhead of de-nibblization.  This extra processing did cut down the speed in the UniDisk data transfer rate, but compared to the older DiskII drives it seemed MUCH faster.
     With the release of the Apple IIGS in September 1986 came a new version of the 800K 3.5 drive called the Apple3.5.  This mechanism could be used on either a Mac or Apple II, fitting into the trend at Apple at making peripherals compatible between the two computers.  The major difference between this drive and the original UniDisk3.5 was that it had been lobotomized to be a "dumb" drive.  Gone was the internal 65c02 processor chip used in the UniDisk3.5 (which made it an "intelligent" drive) and the ability of the drive to buffer its own read and write operations.  The newer Apple3.5 drive did away with the extra circuitry, leaving it to the computer to handle direct control of the drive.  This could be done in the IIGS because of its faster 65816 microprocessor, which could keep up with the higher rate of data transfer.  Recall the above discussion of interleave?  The original UniDisk3.5 worked best with an interleave of 4:1, but the Apple3.5 used 2:1 interleave and could do disk reads and writes faster.  Disks formatted with either drive were usable with the other one, but would be slower on the "foreign" drive.<5>
     Overall, Apple released four versions of 3.5 drives between 1984 and 1986.  First was the 400K drive used on the original Macintosh, then the 800K UniDisk3.5 (which wouldn't work on the Mac), then an 800K drive for the Mac (which wouldn't work on the Apple II), and finally the Apple3.5 drive, which worked on the Apple IIGS and the Mac, but not the IIe and original IIc.<5>


THE APPLE IIC PLUS: HARDWARE

     Recalibrating our special time-travel card to focus on the final 8-bit version of the Apple II, let's travel to mid-1987.  It was at this time that someone at Apple decided that the IIc needed to be upgraded.  Shortly before July, three years after its original 1984 introduction, it was felt that the Apple IIc would benefit from the larger capacity Apple3.5 drive as its internal drive.  The primary intent was to make only this change, while leaving the rest of the IIc as it was.  As with most other Apple projects, this went by various internal code names during its development, includine Pizza, Raisin, and Adam Ant.<11>
     Trying to use the Apple3.5 drive in the Apple IIc was certainly an engineering problem.  As mentioned above, the 1 MHz 65c02 was simply not fast enough to take raw data off the Apple3.5 drive, de-nibblize it into usable data, and pass it to the operating system.  The "intelligent" 3.5 drive was designed in the first place for that very reason.  To solve the problem, Apple contracted with an outside firm to design a special digital gate array that made it possible for the 1 MHz 65c02 to just barely keep up with the data transfer rate from the Apple3.5 drive.  In accomplishing this, it needed an extra 2K of static RAM space to de-nibblize the raw data from the 3.5 drive.  This extra memory had to be available OUTSIDE the standard Apple IIe/IIc 128K RAM space, since there was simply not enough free memory available to spare even that little bit of space.  The code Apple engineers wrote to use the drive was SO tight that there were EXACTLY enough clock cycles to properly time things while controlling the drive.  (Each assembly language instruction takes a certain number of clock cycles; these cycles have to be taken into account for timing-sensitive operations such as disk and serial port drivers).
     To support older Apple II software that came only on 5.25 disks, the disk port on the back was now changed to handle not only external 3.5 drives (either UniDisk3.5 or Apple3.5), but also up to TWO Apple5.25 drives which could be chained together (the same drives used with the Apple IIGS).  These could be chained together as could the 3.5 drives.  The IIcPlus, then, could have three additional drives attached, in any mixture of Apple3.5, UniDisk3.5, or Apple5.25 drives.<6>
     The IIcPlus design was not thought out completely from start to finish, however.  After they did the work with the special gate array to make the original IIc architecture work properly, someone decided that it was not a good idea to release a 1 MHz computer in 1987.  People want speed, they reasoned; look at the world of the IBM PC and its clones, where each year faster and faster models are released.  They decided then to retrofit the new IIc with a faster 4 MHz version of the 65c02.  That change, had it been done from the start, would have made engineering the internal 3.5 drive simpler; they could have just used the processor at 4 MHz for 3.5 drive access, and then used the true system speed (as selected by the user) for all other functions.  The complicated gate array would not have been necessary.  But, since the faster speed was added as an afterthought, and the project was under a tight schedule, the gate array design was not changed.
     To accomplish the faster processor speed for the IIcPlus, Apple went to another outside firm, Zip Technologies.  This company had already marketed an accelerator, the Zip Chip, that was popular as an add-on product for existing Apple II computers.  Users could simply remove the 6502 or 65c02 chip in their computer, replace it with the special Zip Chip, and suddenly they had a computer that ran up to four times as fast.  Apple licensed this technology from Zip, but engineers balked at actually using the Zip Chip itself for the IIcPlus.  Part of this was because of the size of the Zip Chip.  The chip was shaped like a standard integrated circuit, but was thicker vertically than a basic 65c02.  Inside the extra space was a fast 65c02 processor, plus some caching RAM, all squeezed into a space that would fit even into the original Apple IIc (where space was at a premium).  (The Zip Chip "cache" is a piece of RAM memory that is used to hold copies of system memory that the processor is frequently accessing.  For instance, if a lot of graphics manipulation is being done by a program, the caching RAM would hold a copy of part of the graphics RAM, and could access it much faster than the standard RAM.  This is part of what makes an after-market accelerator work).  
     Zip had wanted Apple to buy their Zip Chip and simply use that product in the IIcPlus.  Obviously, this would have been to Zip's advantage financially.  However, the thicker vertical size of the Chip made testing the completed computer more difficult, and it would be a problem to isolate product failures to the Zip Chip, instead of something else on the motherboard.  By using a 4 MHz 65c02 and two 8K static RAM chips as separate components in the IIcPlus, Apple engineers could ensure that it would work and be available in a large enough volume for production.  When they were designing the IIcPlus, Zip Technologies could not guarantee they could provide reliable products in the volume Apple needed.
     The IIcPlus did not have the 12 VDC input on the back panel as did the earlier IIc's; instead, the power supply was built-in.  This was not because it was necessarily a better design, as an internal power supply was actually less reliable ultimately than the external power supply.  (It exposes the internal components to higher levels of heat over the lifetime of the product).  But because many people had criticized Apple about the IIc external power supply (called a "brick on a leash" at Apple), that they had decided to make it internal on the IIcPlus as it was on all their other products.  This change apparently did not cause any significant problems, as few people were actually trying to use the IIc as a "portable" computer (with a battery pack).
     The memory expansion slot on the IIcPlus was not compatible with the memory cards that Apple had produced for the older IIc.  This was primarily a timing problem; it was not because the RAM chips in the memory card were not fast enough to keep up with the 4 MHz speed of the IIcPlus.  (Older IIc users can use an Apple Memory Expansion card with an 8 MHz Zip Chip with no problems).  The IIcPlus also had an additional connector at the opposite end of a memory card plugged into the expansion slot.  Signals from port 2 were made available at that end, so third party companies could make a card that was a combination RAM card and internal modem.  However, this never did come about (see below).
     Other changes in the IIcPlus included a slightly redesigned keyboard and mini-DIN-8 connectors on the back panel for its serial ports (to be more compatible with Apple's new Macintosh and IIGS keyboards).  
     One interesting note:  John Arkley, one of the engineers working on the project and a long-time Apple employee, campaigned long and hard to take things a step further.  He wanted them to take an Apple IIGS motherboard, remove the slots, change the ROM to support only the internal "slots", and release a IIGS in a IIc case.  He felt it would have made a great portable, non-expandable IIGS, but could not get anyone who could approve the plan to get interested in the idea.


THE APPLE IIC PLUS: FIRMWARE

     The IIcPlus ROM was called revision 5 (the previous Revised Memory Expansion IIc was labelled as revision 4).  The main changes present were the ones that supported the internal Apple3.5 drive.  Firmware on the new IIc was not any larger than the 32K on the previous models, but it did use the entire space (the previous IIc didn't use the last 8K available in the ROM).
     One minor bug that slipped by in the IIcPlus firmware was an inability to deal with 400K (single-sided) 3.5 disks.  There were few commercial software packages that came on such disks, however.<7>,<8>


THE APPLE IIC PLUS: INTRODUCTION

     In September 1988 the Apple IIc Plus was introduced to considerably less fanfare than the original IIc was in April 1984.  There were no promises of "Apple II Forever" this time; instead, it warranted little more than a press release in various Apple II magazines of the time.  Its selling price was $675 (or $1,099 with a color monitor).  This was remarkable, considering that the original Apple IIc WITHOUT a monitor sold for nearly double the price ($1,295) and had far less capacity and power than this new version.  Some models of the IIcPlus were even shipped with 256K of extra memory already added.  It was faster than any other Apple II ever produced (including the 2.8 MHz IIGS), and was probably the finest 8-bit computer Apple ever produced.


THE APPLE IIC PLUS: LESS THAN A SUCCESS

     Early on, the Apple IIc Plus was a big seller, and by January 1989 it was above forecasted sales levels.  However, the biggest hurdle that the IIcPlus had to overcome was not the external marketplace, but rather the internal market opinions at Apple Computer, Inc.  Since Macintosh-mania was still in full swing at Apple, and that younger brother of the Apple II was getting most of the attention from management, the IIcPlus (as well as the IIGS) suffered.  It was not because of a lack of capability, but primarily from failure to thrive due to inadequate home nutrition, so to speak.  Also, the IIcPlus had the same problem as the original Apple IIc; customers seemed to want the IIe with its slots, or the greater power of the IIGS.
     There were some products that were designed by third-party developers for both the IIc and IIc Plus that never made it to the market for various reasons.  Applied Ingenuity (later known as Ingenuity, Inc) had two products that would have markedly increased the portability of the IIc/IIcPlus.  One was an internal hard disk they called "CDrive", which would have replaced the Apple IIc or IIcPlus internal floppy disk drive (converting it into an external floppy drive).  Even more unique was "CKeeper", which was a multi-function card with many features.  It could hold up to 1.25 MB of extra RAM; it had a clock/calendar chip that was ProDOS compatible; it had firmware routines to support dumping text or graphics screens to the printer; it could function as a built-in assembly language program debugger; and best of all, a feature called RAMSaver, which maintained power to the RAM chips during a power failure or if the power switch was turned off.  Both of these products never saw the light of day, primarily because the company went out of business before they could be finished.<9>
     Chinook Technologies actually finished design on an internal modem for the IIcPlus, but never released it.  This card, 1.5 by 6 inches in size, would have mounted inside the disk drive shield.  It connected to a small box attached to the outside of the IIc case, where there were cut-outs provided by Apple for connection of an "anti-theft" cable.  This external box had phone jacks for the phone line and a telephone, just like most external modems.  Undoubtably it never was released because of Apple's indifference towards the IIcPlus.<10>
     With inadequate support by Apple marketing, third-party hardware and software developers had little motivation in designing any new products for the IIcPlus.  Therefore, no unique products ever emerged on the market to take advantage of its features.  Finally, in September of 1990 the IIcPlus was discontinued by Apple, leaving the platinum Apple IIe and the Apple IIGS as the remaining bearers of Wozniak's legacy.


++++++++++++++++++++++++++++++++++

NEXT INSTALLMENT:  The Apple IIGS

++++++++++++++++++++++++++++++++++


NOTES


     <1> Thyng, Mike.  "Apple Source", PEEKING AT CALL-A.P.P.L.E., VOL. 1, 1978, pp. 7-8.

     <2> -----.  -----, APPLE ORCHARD, VOL. 1, NO. 1., Mar-Apr 1980, various.

     <3> -----.  "Tomorrow's Apples Today", CALL-A.P.P.L.E., May 1984, p. 78.

     <4> -----.  "The Marketplace", CALL-A.P.P.L.E., Jul 1985, p. 49.

     <5> Baum, Peter and Allen.  "Speaking Of Hardware", CALL-A.P.P.L.E., Oct 1987, pp. 30-34, 51.

     <6> Weishaar, Tom.  "Apple rediscovers the Apple II", OPEN-APPLE, Nov 198, p. 4.73.

     <7> Weishaar, Tom.  "Ask Uncle DOS", OPEN-APPLE, Jan 1989, p. 4.91.

     <8> Weishaar, Tom.  "Miscellanea", OPEN-APPLE, May 1989, p. 5.27.

     <9> -----.  "Ingenuity News", II AT WORK, Vol. 2, No. 1, Spring 1990, p. 30.

     <10> Hoover, Tom.  (personal mail), GEnie, E-MAIL, Nov 1991.

     <11> A+ Staff.  "NewsPlus", A+ MAGAZINE, Oct 1989, p. 18.
